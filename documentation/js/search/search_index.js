var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.2.0","fields":["title","body"],"fieldVectors":[["title/classes/Answer.html",[0,0.085,1,1.28]],["body/classes/Answer.html",[0,0.134,1,2.548,2,0.537,3,0.448,4,0.366,5,2.17,6,0.854,7,0.537,8,1.544,9,3.684,10,3.942,11,4.419,12,1.512,13,2.716,14,2.507,15,1.206,16,3.655,17,0.861,18,0.056,19,1.032,20,0.874,21,0.861,22,2.753,23,4.131,24,2.753,25,4.131,26,2.716,27,2.716,28,1.541,29,1.326,30,2.92,31,2.074,32,2.074,33,3.655,34,0.448,35,1.541,36,1.158,37,2.17,38,0.038,39,0.038]],["title/components/AppComponent.html",[40,0.146,41,0.612]],["body/components/AppComponent.html",[0,0.096,2,0.584,3,0.487,4,0.398,6,0.69,18,0.056,19,0.903,34,0.487,38,0.041,39,0.041,40,0.275,41,1.067,42,1.248,43,1.248,44,1.248,45,2.36,46,3.864,47,1.248,48,2.123,49,1.814,50,2.192,51,3.864,52,1.633,53,3.864,54,0.806,55,0.936,56,0.936,57,1.633,58,1.633,59,1.633,60,1.93,61,1.248,62,1.248,63,0.69,64,1.248,65,0.69,66,1.248,67,0.69,68,1.248,69,0.69,70,0.806,71,1.248,72,0.69,73,0.584,74,1.248,75,1.248]],["title/modules/AppModule.html",[76,1.28,77,1.487]],["body/modules/AppModule.html",[0,0.069,2,0.419,3,0.35,4,0.285,18,0.057,34,0.596,38,0.032,39,0.032,40,0.22,41,1.148,54,1.365,55,0.672,56,0.672,63,1.025,65,1.058,67,1.058,69,1.058,70,0.579,72,1.058,73,0.608,76,1.765,77,2.891,78,1.202,79,2.888,80,2.888,81,1.298,82,1.693,83,1.693,84,1.693,85,2.455,86,1.693,87,1.035,88,2.12,89,3.073,90,3.073,91,1.693,92,1.412,93,3.073,94,1.412,95,2.12,96,1.765,97,0.895,98,3.073,99,3.073,100,3.073,101,3.073,102,3.073,103,1.693,104,2.12,105,2.12,106,2.12,107,2.12,108,2.12,109,1.412,110,2.12,111,2.12,112,1.412,113,2.12,114,1.125,115,1.202,116,0.974,117,1.035,118,2.12,119,1.412,120,2.12,121,3.965,122,1.202,123,2.12,124,2.12,125,2.12]],["title/components/HeaderComponent.html",[40,0.146,63,0.612]],["body/components/HeaderComponent.html",[0,0.065,2,0.399,3,0.333,4,0.272,6,0.693,7,0.399,12,1.287,15,0.96,17,0.64,18,0.056,19,0.821,20,0.399,21,0.64,34,0.333,35,1.995,36,0.94,38,0.031,39,0.031,40,0.248,41,0.472,42,0.853,43,0.853,44,0.853,47,0.853,48,1.933,49,1.71,52,1.253,54,0.96,55,0.64,56,0.64,57,1.253,58,1.253,59,1.253,60,1.637,61,0.853,62,0.853,63,0.905,64,0.853,65,0.472,66,0.853,67,0.472,68,0.853,69,0.472,70,0.551,71,0.853,72,0.472,73,0.399,74,0.853,75,0.853,87,1.449,97,0.853,116,1.504,117,0.986,126,1.614,127,3.875,128,1.253,129,2.199,130,2.967,131,2.967,132,3.655,133,2.967,134,2.967,135,1.823,136,3.448,137,1.614,138,3.163,139,2.02,140,1.892,141,2.967,142,2.02,143,3.096,144,2.37,145,1.637,146,1.892,147,2.199,148,2.02,149,2.967,150,1.977,151,0.853,152,1.114,153,0.986,154,1.146,155,2.37,156,2.02,157,2.02,158,2.02,159,2.967,160,2.967,161,2.967,162,2.37,163,2.37,164,2.967]],["title/components/HomeComponent.html",[40,0.146,65,0.612]],["body/components/HomeComponent.html",[0,0.07,2,0.428,3,0.357,4,0.291,6,0.728,7,0.428,8,1.318,12,1.339,15,0.998,17,0.685,18,0.056,19,0.854,20,0.617,21,0.685,34,0.357,36,0.685,38,0.033,39,0.033,40,0.253,41,0.505,42,0.914,43,0.914,44,0.914,47,0.914,48,1.97,49,1.668,52,1.318,54,0.998,55,0.685,56,0.685,57,1.318,58,1.318,59,1.318,60,1.691,61,0.914,62,0.914,63,0.505,64,0.914,65,0.935,66,0.914,67,0.505,68,0.914,69,0.505,70,0.591,71,0.914,72,0.505,73,0.999,74,0.914,75,0.914,114,1.739,115,1.227,122,2.271,128,1.318,135,1.318,140,1.523,145,0.914,151,0.914,152,0.685,153,1.056,163,2.491,165,1.728,166,2.271,167,2.491,168,2.921,169,3.119,170,3.197,171,1.441,172,3.119,173,2.163,174,2.491,175,3.197,176,3.197,177,1.227,178,1.728,179,2.163,180,3.119,181,3.119,182,3.119,183,3.119,184,3.119,185,2.491,186,2.491,187,2.491,188,3.119]],["title/components/LoginComponent.html",[40,0.146,67,0.612]],["body/components/LoginComponent.html",[0,0.068,2,0.416,3,0.347,4,0.283,6,0.841,7,0.416,12,1.319,14,1.93,15,0.835,17,0.969,18,0.056,19,0.923,20,0.605,21,0.969,34,0.347,36,1.141,38,0.032,39,0.032,40,0.262,41,0.492,42,0.889,43,0.889,44,0.889,47,0.889,48,1.956,49,1.654,50,1.735,52,1.292,54,0.983,55,0.667,56,0.667,57,1.292,58,1.292,59,1.292,60,1.67,61,0.889,62,0.889,63,0.492,64,0.889,65,0.492,66,0.889,67,0.923,68,0.889,69,0.492,70,0.575,71,0.889,72,0.492,73,0.416,74,0.889,75,0.889,81,1.292,97,0.889,116,1.519,117,1.028,122,1.735,129,1.735,135,1.67,137,1.682,138,3.194,140,1.93,143,2.443,144,1.682,145,0.889,146,1.93,147,2.242,150,2.038,151,0.889,152,0.969,153,1.028,154,1.194,155,1.682,189,1.682,190,3.829,191,2.443,192,3.058,193,3.058,194,2.105,195,1.735,196,2.443,197,2.105,198,2.443,199,3.498,200,2.105,201,1.682,202,3.058]],["title/components/NewQuestionComponent.html",[40,0.146,69,0.612]],["body/components/NewQuestionComponent.html",[0,0.059,2,0.361,3,0.301,4,0.246,6,0.773,7,0.361,12,1.212,14,2.169,15,0.751,17,0.872,18,0.056,19,1.038,20,0.544,21,0.872,32,2.091,34,0.301,36,1.253,38,0.029,39,0.029,40,0.24,41,0.426,42,0.771,43,0.771,44,0.771,47,0.771,48,1.876,49,1.58,50,1.561,52,1.162,54,1.08,55,0.578,56,0.578,57,1.162,58,1.162,59,1.162,60,1.557,61,0.771,62,0.771,63,0.426,64,0.771,65,0.426,66,0.771,67,0.426,68,0.771,69,0.861,70,1.368,71,0.771,72,0.426,73,0.943,74,1.876,75,0.771,97,0.771,109,2.206,114,1.664,115,1.035,116,1.467,117,0.891,119,1.216,122,1.561,129,1.561,135,1.162,138,3.135,140,2.03,145,0.771,146,1.343,150,1.833,151,0.771,152,1.253,153,0.891,154,1.561,171,1.216,177,1.035,195,1.561,201,1.458,203,2.645,204,1.458,205,2.751,206,3.687,207,2.751,208,2.751,209,2.751,210,1.825,211,2.751,212,1.825,213,1.833,214,2.198,215,2.751,216,2.751,217,1.825,218,1.825,219,1.458,220,1.825,221,2.198]],["title/classes/Question.html",[0,0.085,73,0.518]],["body/classes/Question.html",[0,0.136,1,2.378,2,0.476,3,0.397,4,0.324,6,1.175,7,0.476,8,1.421,9,3.829,10,3.753,12,1.419,14,2.541,15,1.206,17,0.762,18,0.056,19,1.152,20,0.905,21,0.762,22,2.583,24,1.603,28,1.365,29,1.175,32,2.199,34,0.397,36,1.228,37,1.922,38,0.035,39,0.035,54,0.657,73,0.995,81,1.774,128,1.421,152,1.065,166,2.199,213,2.241,222,1.922,223,2.405,224,3.363,225,2.405,226,2.405,227,2.405,228,2.405,229,2.405,230,2.405]],["title/components/QuestionDetailsComponent.html",[40,0.146,72,0.612]],["body/components/QuestionDetailsComponent.html",[0,0.043,1,2.151,2,0.262,3,0.218,4,0.178,6,0.723,7,0.757,8,0.904,12,0.987,15,0.993,17,0.854,18,0.056,19,0.794,20,0.612,21,0.854,24,1.426,31,0.751,34,0.218,35,1.529,36,1.303,38,0.022,39,0.022,40,0.213,41,0.309,42,0.559,43,0.559,44,0.559,47,0.559,48,1.683,49,1.401,50,1.214,52,0.904,54,1.045,55,0.419,56,0.419,57,0.904,58,0.904,59,0.904,60,1.308,61,0.559,62,0.559,63,0.309,64,0.559,65,0.309,66,0.559,67,0.309,68,0.559,69,0.309,70,0.845,71,0.559,72,0.723,73,1.001,74,1.436,75,0.559,81,0.904,94,0.882,96,1.775,97,0.559,112,2.549,114,1.506,115,0.751,116,1.339,117,0.646,119,1.426,128,0.904,135,0.904,140,1.775,145,1.536,146,1.511,147,1.214,151,1.138,152,0.678,153,0.646,154,1.214,162,2.472,166,1.756,167,1.71,168,2.153,170,2.472,171,0.882,174,1.71,175,2.472,176,2.472,177,0.751,178,1.058,185,1.71,186,1.71,187,1.71,191,1.71,198,2.904,214,1.71,219,1.71,221,2.472,231,3.057,232,1.058,233,3.636,234,2.141,235,2.141,236,3.636,237,2.141,238,2.141,239,2.141,240,2.141,241,2.141,242,2.141,243,3.095,244,3.398,245,2.141,246,2.141,247,3.398,248,3.095,249,2.141,250,3.095,251,1.324,252,2.141,253,3.398,254,1.324,255,2.141,256,2.141,257,2.141,258,1.324,259,1.426,260,1.324,261,1.324,262,1.324,263,1.324,264,1.324,265,1.324,266,1.324,267,1.324,268,1.324,269,1.324,270,1.324,271,1.324,272,2.141,273,2.141,274,2.141,275,2.141,276,2.141,277,2.141,278,3.636]],["title/classes/QuestionService.html",[0,0.085,114,0.96]],["body/classes/QuestionService.html",[0,0.133,2,0.645,3,0.538,4,0.439,6,0.761,7,0.645,8,1.739,15,0.89,18,0.056,20,0.814,28,1.849,29,1.592,32,1.849,34,0.538,38,0.043,39,0.043,54,0.89,73,1.047,114,1.507,128,1.739,152,1.304,166,2.689,177,1.849,195,2.336,279,2.604,280,3.26,281,4.117,282,3.26]],["title/classes/UserService.html",[0,0.085,116,0.831]],["body/classes/UserService.html",[0,0.109,2,0.476,3,0.397,4,0.324,6,0.785,7,0.476,8,1.421,14,2.294,15,1.146,17,0.762,18,0.056,19,1.069,20,0.665,21,0.762,22,2.943,29,1.642,31,1.908,34,0.397,35,2.199,36,0.762,38,0.035,39,0.035,81,1.638,87,1.642,116,1.065,128,1.016,132,3.354,135,1.421,136,3.354,145,1.985,146,2.341,147,2.829,151,1.421,152,1.45,190,2.686,195,1.365,196,2.686,199,4.05,259,2.241,283,1.922,284,2.405,285,2.405,286,2.405,287,2.405,288,4.577,289,2.405,290,4.198,291,2.405,292,3.877]],["title/coverage.html",[293,2.85]],["body/coverage.html",[0,0.15,1,1.484,4,0.409,5,2.428,18,0.055,20,0.601,38,0.041,39,0.041,40,0.272,41,0.71,45,2.428,63,0.71,65,0.71,67,0.71,69,0.71,70,0.83,72,0.71,73,0.601,109,2.025,112,2.025,114,1.113,116,0.963,126,2.428,165,2.428,189,2.428,203,2.428,204,2.428,222,2.428,231,2.428,232,2.428,279,2.428,283,2.428,293,2.428,294,3.04,295,3.04,296,3.04,297,2.428,298,2.623,299,3.145,300,3.145,301,3.937,302,2.428,303,5.154,304,3.04,305,3.937,306,3.937,307,3.04,308,3.937,309,3.04,310,3.04,311,3.04,312,3.04]],["title/dependencies.html",[78,1.787,313,2.194]],["body/dependencies.html",[18,0.057,38,0.045,39,0.045,55,1.097,78,1.964,91,3.415,92,2.848,94,2.307,97,1.463,103,2.766,314,3.463,315,3.463,316,3.463,317,5.136,318,3.463,319,3.463,320,3.463,321,3.463,322,3.463,323,3.463,324,3.463,325,3.463,326,3.463,327,3.463,328,3.463,329,3.463,330,4.275]],["title/index.html",[7,0.434,331,2.194,332,2.194]],["body/index.html",[3,0.474,4,0.387,18,0.04,19,0.671,38,0.04,39,0.04,40,0.236,49,1.389,70,0.784,87,1.403,129,1.63,259,1.914,333,4.519,334,2.873,335,3.795,336,4.519,337,4.249,338,2.873,339,2.873,340,2.873,341,3.795,342,4.996,343,4.996,344,4.249,345,2.873,346,2.873,347,2.873,348,2.873,349,2.873,350,2.873,351,2.873,352,4.249,353,2.873,354,4.699,355,2.873,356,2.873,357,2.873,358,2.873,359,2.873,360,2.873,361,2.295,362,3.795,363,4.826,364,3.795,365,4.249,366,2.873,367,4.519,368,2.873,369,2.873,370,2.873,371,2.873,372,2.873,373,2.873,374,4.249,375,2.873,376,2.873,377,2.873]],["title/modules.html",[76,1.742]],["body/modules.html",[18,0.049,38,0.049,39,0.049,76,1.989,77,2.311,92,2.715,378,4.075,379,4.075,380,4.075]],["title/overview.html",[381,2.85]],["body/overview.html",[0,0.105,18,0.054,34,0.532,38,0.043,39,0.043,40,0.179,41,1.181,56,1.022,63,1.049,65,1.049,67,1.049,69,1.049,72,1.049,76,1.997,77,3.021,78,1.83,79,2.577,80,2.577,81,1.363,82,2.577,83,2.577,84,2.577,85,3.267,86,2.577,87,1.575,96,1.575,300,2.577,381,2.577,382,3.226,383,3.226,384,3.226]],["title/routes.html",[96,1.742]],["body/routes.html",[18,0.05,38,0.05,39,0.05,96,2.033]],["title/miscellaneous/variables.html",[298,2.099,385,1.752]],["body/miscellaneous/variables.html",[7,0.716,18,0.056,20,0.869,28,2.493,29,2.146,30,2.893,31,2.055,38,0.046,39,0.046,213,3.277,297,2.893,298,2.413,299,4.092,302,2.893,361,3.51,385,2.893,386,3.622,387,3.622]]],"invertedIndex":[["",{"_index":18,"title":{},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":300,"title":{},"body":{"coverage.html":{},"overview.html":{}}}],["0.8.26",{"_index":328,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":301,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":382,"title":{},"body":{"overview.html":{}}}],["1.2.1",{"_index":339,"title":{},"body":{"index.html":{}}}],["1/1",{"_index":304,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":303,"title":{},"body":{"coverage.html":{}}}],["2.5.5",{"_index":324,"title":{},"body":{"dependencies.html":{}}}],["2/2",{"_index":310,"title":{},"body":{"coverage.html":{}}}],["3/3",{"_index":306,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":384,"title":{},"body":{"overview.html":{}}}],["4/4",{"_index":305,"title":{},"body":{"coverage.html":{}}}],["5.0.0",{"_index":320,"title":{},"body":{"dependencies.html":{}}}],["5/5",{"_index":308,"title":{},"body":{"coverage.html":{}}}],["6",{"_index":383,"title":{},"body":{"overview.html":{}}}],["6.0.0",{"_index":317,"title":{},"body":{"dependencies.html":{}}}],["6.0.9",{"_index":315,"title":{},"body":{"dependencies.html":{}}}],["6.1.0",{"_index":326,"title":{},"body":{"dependencies.html":{}}}],["6.4.0",{"_index":330,"title":{},"body":{"dependencies.html":{}}}],["6/6",{"_index":309,"title":{},"body":{"coverage.html":{}}}],["7/7",{"_index":307,"title":{},"body":{"coverage.html":{}}}],["accept",{"_index":33,"title":{},"body":{"classes/Answer.html":{}}}],["acceptansw",{"_index":241,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["acceptanswer(index",{"_index":249,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["activatedrout",{"_index":244,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["actual_compon",{"_index":75,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["add",{"_index":214,"title":{},"body":{"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["addansw",{"_index":242,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["addanswer(answerform",{"_index":252,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["addquest",{"_index":209,"title":{},"body":{"components/NewQuestionComponent.html":{}}}],["addquestion(nam",{"_index":211,"title":{},"body":{"components/NewQuestionComponent.html":{}}}],["angular",{"_index":333,"title":{},"body":{"index.html":{}}}],["angular/anim",{"_index":314,"title":{},"body":{"dependencies.html":{}}}],["angular/cdk",{"_index":329,"title":{},"body":{"dependencies.html":{}}}],["angular/common",{"_index":316,"title":{},"body":{"dependencies.html":{}}}],["angular/compil",{"_index":318,"title":{},"body":{"dependencies.html":{}}}],["angular/cor",{"_index":55,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"dependencies.html":{}}}],["angular/form",{"_index":94,"title":{},"body":{"modules/AppModule.html":{},"components/QuestionDetailsComponent.html":{},"dependencies.html":{}}}],["angular/http",{"_index":319,"title":{},"body":{"dependencies.html":{}}}],["angular/materi",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/platform",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["angular/rout",{"_index":97,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"dependencies.html":{}}}],["answer",{"_index":1,"title":{"classes/Answer.html":{}},"body":{"classes/Answer.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"coverage.html":{}}}],["answer'",{"_index":24,"title":{},"body":{"classes/Answer.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{}}}],["answer.answ",{"_index":276,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["answer.author",{"_index":274,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["answer.model",{"_index":228,"title":{},"body":{"classes/Question.html":{}}}],["answerform",{"_index":255,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["answerform.controls['answer'].valu",{"_index":267,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["answerform.reset",{"_index":269,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["answer}",{"_index":230,"title":{},"body":{"classes/Question.html":{}}}],["answer}'",{"_index":229,"title":{},"body":{"classes/Question.html":{}}}],["app",{"_index":49,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"index.html":{}}}],["app'},{'nam",{"_index":62,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["app.compon",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["app.component.css",{"_index":51,"title":{},"body":{"components/AppComponent.html":{}}}],["app.component.html",{"_index":53,"title":{},"body":{"components/AppComponent.html":{}}}],["appcompon",{"_index":41,"title":{"components/AppComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["appmodul",{"_index":77,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["approut",{"_index":120,"title":{},"body":{"modules/AppModule.html":{}}}],["array",{"_index":281,"title":{},"body":{"classes/QuestionService.html":{}}}],["artifact",{"_index":355,"title":{},"body":{"index.html":{}}}],["ask",{"_index":166,"title":{},"body":{"components/HomeComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{}}}],["author",{"_index":10,"title":{},"body":{"classes/Answer.html":{},"classes/Question.html":{}}}],["automat",{"_index":347,"title":{},"body":{"index.html":{}}}],["background",{"_index":235,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["bar",{"_index":130,"title":{},"body":{"components/HeaderComponent.html":{}}}],["befor",{"_index":370,"title":{},"body":{"index.html":{}}}],["bejelentkezé",{"_index":202,"title":{},"body":{"components/LoginComponent.html":{}}}],["boolean",{"_index":35,"title":{},"body":{"classes/Answer.html":{},"components/HeaderComponent.html":{},"components/QuestionDetailsComponent.html":{},"classes/UserService.html":{}}}],["bootstrap",{"_index":80,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["bootstrapp",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["brand",{"_index":131,"title":{},"body":{"components/HeaderComponent.html":{}}}],["brows",{"_index":380,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{},"modules.html":{}}}],["browsermodul",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["build",{"_index":354,"title":{},"body":{"index.html":{}}}],["button",{"_index":133,"title":{},"body":{"components/HeaderComponent.html":{}}}],["call",{"_index":143,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["chang",{"_index":349,"title":{},"body":{"index.html":{}}}],["check",{"_index":259,"title":{},"body":{"components/QuestionDetailsComponent.html":{},"classes/UserService.html":{},"index.html":{}}}],["class",{"_index":0,"title":{"classes/Answer.html":{},"classes/Question.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{}},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["cli",{"_index":337,"title":{},"body":{"index.html":{}}}],["cluster_appmodul",{"_index":82,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_bootstrap",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_declar",{"_index":83,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["code",{"_index":350,"title":{},"body":{"index.html":{}}}],["compon",{"_index":40,"title":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"coverage.html":{},"index.html":{},"overview.html":{}}}],["component/header/header.compon",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["component/home/home.compon",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["component/login/login.compon",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["component/new",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["component/quest",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["component_templ",{"_index":61,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["configur",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["const",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["constructor",{"_index":12,"title":{},"body":{"classes/Answer.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{}}}],["constructor(author",{"_index":13,"title":{},"body":{"classes/Answer.html":{}}}],["constructor(nam",{"_index":223,"title":{},"body":{"classes/Question.html":{}}}],["constructor(priv",{"_index":153,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["constructor(publ",{"_index":37,"title":{},"body":{"classes/Answer.html":{},"classes/Question.html":{}}}],["constructor(questionservic",{"_index":171,"title":{},"body":{"components/HomeComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["constructor(rout",{"_index":137,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["contain",{"_index":128,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{}}}],["core",{"_index":322,"title":{},"body":{"dependencies.html":{}}}],["correct",{"_index":236,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["coverag",{"_index":293,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["creat",{"_index":206,"title":{},"body":{"components/NewQuestionComponent.html":{}}}],["data",{"_index":257,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["declar",{"_index":79,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["default",{"_index":28,"title":{},"body":{"classes/Answer.html":{},"classes/Question.html":{},"classes/QuestionService.html":{},"miscellaneous/variables.html":{}}}],["defin",{"_index":15,"title":{},"body":{"classes/Answer.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{}}}],["depend",{"_index":78,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"dependencies.html":{},"overview.html":{}}}],["descript",{"_index":6,"title":{},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{}}}],["detail",{"_index":74,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["details.compon",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["details.component.css",{"_index":239,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["details.component.html",{"_index":240,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["details.component.t",{"_index":232,"title":{},"body":{"components/QuestionDetailsComponent.html":{},"coverage.html":{}}}],["details.component.ts:26",{"_index":245,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["details.component.ts:41",{"_index":260,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["details.component.ts:53",{"_index":254,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["details.component.ts:66",{"_index":258,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["details.component.ts:74",{"_index":251,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["details/:id",{"_index":123,"title":{},"body":{"modules/AppModule.html":{}}}],["details/quest",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"components/QuestionDetailsComponent.html":{},"coverage.html":{}}}],["dev",{"_index":345,"title":{},"body":{"index.html":{}}}],["develop",{"_index":340,"title":{},"body":{"index.html":{}}}],["direct",{"_index":59,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["directive|pipe|service|class|modul",{"_index":353,"title":{},"body":{"index.html":{}}}],["directori",{"_index":358,"title":{},"body":{"index.html":{}}}],["display",{"_index":191,"title":{},"body":{"components/LoginComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["dist",{"_index":357,"title":{},"body":{"index.html":{}}}],["document",{"_index":294,"title":{},"body":{"coverage.html":{}}}],["dom",{"_index":43,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["dynam",{"_index":321,"title":{},"body":{"dependencies.html":{}}}],["e2",{"_index":368,"title":{},"body":{"index.html":{}}}],["element",{"_index":58,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["elfogad",{"_index":277,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["end",{"_index":367,"title":{},"body":{"index.html":{}}}],["engin",{"_index":160,"title":{},"body":{"components/HeaderComponent.html":{}}}],["environ",{"_index":299,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["execut",{"_index":364,"title":{},"body":{"index.html":{}}}],["export",{"_index":34,"title":{},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{},"overview.html":{}}}],["fals",{"_index":30,"title":{},"body":{"classes/Answer.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":4,"title":{},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{},"coverage.html":{},"index.html":{}}}],["flag",{"_index":360,"title":{},"body":{"index.html":{}}}],["form",{"_index":256,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["formsmodul",{"_index":93,"title":{},"body":{"modules/AppModule.html":{}}}],["function",{"_index":285,"title":{},"body":{"classes/UserService.html":{}}}],["further",{"_index":373,"title":{},"body":{"index.html":{}}}],["gain",{"_index":246,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["gener",{"_index":336,"title":{},"body":{"index.html":{}}}],["get",{"_index":331,"title":{"index.html":{}},"body":{}}],["given",{"_index":198,"title":{},"body":{"components/LoginComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["go",{"_index":376,"title":{},"body":{"index.html":{}}}],["green",{"_index":234,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["handl",{"_index":284,"title":{},"body":{"classes/UserService.html":{}}}],["header",{"_index":127,"title":{},"body":{"components/HeaderComponent.html":{}}}],["header'},{'nam",{"_index":64,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["header.component.html",{"_index":134,"title":{},"body":{"components/HeaderComponent.html":{}}}],["headercompon",{"_index":63,"title":{"components/HeaderComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["help",{"_index":374,"title":{},"body":{"index.html":{}}}],["here",{"_index":205,"title":{},"body":{"components/NewQuestionComponent.html":{}}}],["home",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{}}}],["home'},{'nam",{"_index":66,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["home.component.html",{"_index":169,"title":{},"body":{"components/HomeComponent.html":{}}}],["homecompon",{"_index":65,"title":{"components/HomeComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["hozzáad",{"_index":221,"title":{},"body":{"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["html",{"_index":57,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["http://localhost:4200",{"_index":346,"title":{},"body":{"index.html":{}}}],["id",{"_index":247,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["identifi",{"_index":295,"title":{},"body":{"coverage.html":{}}}],["implement",{"_index":167,"title":{},"body":{"components/HomeComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["import",{"_index":54,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"classes/Answer.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":2,"title":{},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{}}}],["initi",{"_index":174,"title":{},"body":{"components/HomeComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["inject",{"_index":140,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["iscorrect",{"_index":11,"title":{},"body":{"classes/Answer.html":{}}}],["isuserloggedin",{"_index":136,"title":{},"body":{"components/HeaderComponent.html":{},"classes/UserService.html":{}}}],["isuserownsthisquest",{"_index":243,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["j",{"_index":162,"title":{},"body":{"components/HeaderComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["js",{"_index":323,"title":{},"body":{"dependencies.html":{}}}],["karma",{"_index":366,"title":{},"body":{"index.html":{}}}],["kezdőold",{"_index":161,"title":{},"body":{"components/HeaderComponent.html":{}}}],["kilépé",{"_index":164,"title":{},"body":{"components/HeaderComponent.html":{}}}],["kérdezett",{"_index":183,"title":{},"body":{"components/HomeComponent.html":{}}}],["kérdezt",{"_index":273,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["kérdé",{"_index":163,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{}}}],["kérdések",{"_index":180,"title":{},"body":{"components/HomeComponent.html":{}}}],["legend",{"_index":56,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"overview.html":{}}}],["leírá",{"_index":186,"title":{},"body":{"components/HomeComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["link",{"_index":152,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{}}}],["list",{"_index":216,"title":{},"body":{"components/NewQuestionComponent.html":{}}}],["local",{"_index":175,"title":{},"body":{"components/HomeComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["log",{"_index":147,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/QuestionDetailsComponent.html":{},"classes/UserService.html":{}}}],["login",{"_index":190,"title":{},"body":{"components/LoginComponent.html":{},"classes/UserService.html":{}}}],["login'},{'nam",{"_index":68,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["login(usernam",{"_index":196,"title":{},"body":{"components/LoginComponent.html":{},"classes/UserService.html":{}}}],["login.component.css",{"_index":192,"title":{},"body":{"components/LoginComponent.html":{}}}],["login.component.html",{"_index":193,"title":{},"body":{"components/LoginComponent.html":{}}}],["logincompon",{"_index":67,"title":{"components/LoginComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["logout",{"_index":132,"title":{},"body":{"components/HeaderComponent.html":{},"classes/UserService.html":{}}}],["made",{"_index":23,"title":{},"body":{"classes/Answer.html":{}}}],["main",{"_index":46,"title":{},"body":{"components/AppComponent.html":{}}}],["make",{"_index":371,"title":{},"body":{"index.html":{}}}],["mark",{"_index":233,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["matbuttonmodul",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["matcardmodul",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["match",{"_index":39,"title":{},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["matinputmodul",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["matmenumodul",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["mattoolbarmodul",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["metadata",{"_index":47,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["method",{"_index":135,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"classes/UserService.html":{}}}],["miscellan",{"_index":385,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["model/answer.model",{"_index":261,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["model/question.model",{"_index":177,"title":{},"body":{"components/HomeComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{}}}],["modul",{"_index":76,"title":{"modules/AppModule.html":{},"modules.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":375,"title":{},"body":{"index.html":{}}}],["még",{"_index":184,"title":{},"body":{"components/HomeComponent.html":{}}}],["name",{"_index":19,"title":{},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/UserService.html":{},"index.html":{}}}],["navig",{"_index":129,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"index.html":{}}}],["new",{"_index":70,"title":{},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"coverage.html":{},"index.html":{}}}],["newansw",{"_index":266,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["newquest",{"_index":217,"title":{},"body":{"components/NewQuestionComponent.html":{}}}],["newquestioncompon",{"_index":69,"title":{"components/NewQuestionComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["ng",{"_index":343,"title":{},"body":{"index.html":{}}}],["ngform",{"_index":253,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["ngmodul",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["ngoninit",{"_index":170,"title":{},"body":{"components/HomeComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["nrkhax",{"_index":334,"title":{},"body":{"index.html":{}}}],["null",{"_index":288,"title":{},"body":{"classes/UserService.html":{}}}],["number",{"_index":250,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["object",{"_index":213,"title":{},"body":{"components/NewQuestionComponent.html":{},"classes/Question.html":{},"miscellaneous/variables.html":{}}}],["on",{"_index":237,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["oninit",{"_index":168,"title":{},"body":{"components/HomeComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["option",{"_index":21,"title":{},"body":{"classes/Answer.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/UserService.html":{}}}],["out",{"_index":87,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"classes/UserService.html":{},"index.html":{},"overview.html":{}}}],["overview",{"_index":381,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["owner",{"_index":238,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["packag",{"_index":313,"title":{"dependencies.html":{}},"body":{}}],["page",{"_index":150,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{}}}],["param",{"_index":36,"title":{},"body":{"classes/Answer.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/UserService.html":{}}}],["paramet",{"_index":17,"title":{},"body":{"classes/Answer.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/UserService.html":{}}}],["params['id",{"_index":264,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["path",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["privat",{"_index":154,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["prod",{"_index":359,"title":{},"body":{"index.html":{}}}],["product",{"_index":361,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["project",{"_index":335,"title":{},"body":{"index.html":{}}}],["properti",{"_index":8,"title":{},"body":{"classes/Answer.html":{},"components/HomeComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{}}}],["protractor",{"_index":369,"title":{},"body":{"index.html":{}}}],["provid",{"_index":81,"title":{},"body":{"modules/AppModule.html":{},"components/LoginComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/UserService.html":{},"overview.html":{}}}],["public",{"_index":9,"title":{},"body":{"classes/Answer.html":{},"classes/Question.html":{}}}],["qa",{"_index":159,"title":{},"body":{"components/HeaderComponent.html":{}}}],["question",{"_index":73,"title":{"classes/Question.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{},"coverage.html":{}}}],["question'",{"_index":32,"title":{},"body":{"classes/Answer.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"classes/QuestionService.html":{}}}],["question'},{'nam",{"_index":71,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["question(nam",{"_index":218,"title":{},"body":{"components/NewQuestionComponent.html":{}}}],["question.author",{"_index":272,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["question.compon",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["question.component.css",{"_index":207,"title":{},"body":{"components/NewQuestionComponent.html":{}}}],["question.component.html",{"_index":208,"title":{},"body":{"components/NewQuestionComponent.html":{}}}],["question.component.t",{"_index":204,"title":{},"body":{"components/NewQuestionComponent.html":{},"coverage.html":{}}}],["question.component.ts:17",{"_index":210,"title":{},"body":{"components/NewQuestionComponent.html":{}}}],["question.component.ts:35",{"_index":212,"title":{},"body":{"components/NewQuestionComponent.html":{}}}],["question.descript",{"_index":187,"title":{},"body":{"components/HomeComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["question.nam",{"_index":185,"title":{},"body":{"components/HomeComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["question/new",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"components/NewQuestionComponent.html":{},"coverage.html":{}}}],["questiondetailscompon",{"_index":72,"title":{"components/QuestionDetailsComponent.html":{}},"body":{"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"coverage.html":{},"overview.html":{}}}],["questionservic",{"_index":114,"title":{"classes/QuestionService.html":{}},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{},"coverage.html":{}}}],["questionservice}'",{"_index":215,"title":{},"body":{"components/NewQuestionComponent.html":{}}}],["question}'",{"_index":282,"title":{},"body":{"classes/QuestionService.html":{}}}],["readm",{"_index":377,"title":{},"body":{"index.html":{}}}],["refer",{"_index":176,"title":{},"body":{"components/HomeComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["reload",{"_index":348,"title":{},"body":{"index.html":{}}}],["reset",{"_index":86,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["result",{"_index":38,"title":{},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{},"coverage.html":{},"dependencies.html":{},"index.html":{},"modules.html":{},"overview.html":{},"routes.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":145,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"classes/UserService.html":{}}}],["root",{"_index":149,"title":{},"body":{"components/HeaderComponent.html":{}}}],["rout",{"_index":96,"title":{"routes.html":{}},"body":{"modules/AppModule.html":{},"components/QuestionDetailsComponent.html":{},"overview.html":{},"routes.html":{}}}],["router",{"_index":138,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{}}}],["routermodul",{"_index":95,"title":{},"body":{"modules/AppModule.html":{}}}],["routermodule.forroot(approut",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["rta",{"_index":275,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["run",{"_index":342,"title":{},"body":{"index.html":{}}}],["rxj",{"_index":325,"title":{},"body":{"dependencies.html":{}}}],["részletek",{"_index":188,"title":{},"body":{"components/HomeComponent.html":{}}}],["scaffold",{"_index":351,"title":{},"body":{"index.html":{}}}],["selector",{"_index":48,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["sem",{"_index":182,"title":{},"body":{"components/HomeComponent.html":{}}}],["senki",{"_index":181,"title":{},"body":{"components/HomeComponent.html":{}}}],["serivc",{"_index":141,"title":{},"body":{"components/HeaderComponent.html":{}}}],["serv",{"_index":344,"title":{},"body":{"index.html":{}}}],["server",{"_index":341,"title":{},"body":{"index.html":{}}}],["servic",{"_index":195,"title":{},"body":{"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{}}}],["service/question.servic",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"components/HomeComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["service/user.servic",{"_index":117,"title":{},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["set",{"_index":290,"title":{},"body":{"classes/UserService.html":{}}}],["sourc",{"_index":3,"title":{},"body":{"classes/Answer.html":{},"components/AppComponent.html":{},"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{},"index.html":{}}}],["src/.../environment.prod.t",{"_index":386,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../environment.t",{"_index":387,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/environments/environment.prod.t",{"_index":297,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/environments/environment.t",{"_index":302,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/src/app/app.component.t",{"_index":45,"title":{},"body":{"components/AppComponent.html":{},"coverage.html":{}}}],["src/src/app/app.module.t",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["src/src/app/component/header/header.component.t",{"_index":126,"title":{},"body":{"components/HeaderComponent.html":{},"coverage.html":{}}}],["src/src/app/component/header/header.component.ts:13",{"_index":139,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/src/app/component/header/header.component.ts:26",{"_index":142,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/src/app/component/header/header.component.ts:33",{"_index":148,"title":{},"body":{"components/HeaderComponent.html":{}}}],["src/src/app/component/home/home.component.t",{"_index":165,"title":{},"body":{"components/HomeComponent.html":{},"coverage.html":{}}}],["src/src/app/component/home/home.component.ts:19",{"_index":172,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/src/app/component/home/home.component.ts:30",{"_index":173,"title":{},"body":{"components/HomeComponent.html":{}}}],["src/src/app/component/login/login.component.t",{"_index":189,"title":{},"body":{"components/LoginComponent.html":{},"coverage.html":{}}}],["src/src/app/component/login/login.component.ts:14",{"_index":194,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/src/app/component/login/login.component.ts:27",{"_index":197,"title":{},"body":{"components/LoginComponent.html":{}}}],["src/src/app/component/new",{"_index":203,"title":{},"body":{"components/NewQuestionComponent.html":{},"coverage.html":{}}}],["src/src/app/component/quest",{"_index":231,"title":{},"body":{"components/QuestionDetailsComponent.html":{},"coverage.html":{}}}],["src/src/app/model/answer.model.t",{"_index":5,"title":{},"body":{"classes/Answer.html":{},"coverage.html":{}}}],["src/src/app/model/answer.model.ts:10",{"_index":16,"title":{},"body":{"classes/Answer.html":{}}}],["src/src/app/model/answer.model.ts:17",{"_index":27,"title":{},"body":{"classes/Answer.html":{}}}],["src/src/app/model/answer.model.ts:18",{"_index":26,"title":{},"body":{"classes/Answer.html":{}}}],["src/src/app/model/question.model.t",{"_index":222,"title":{},"body":{"classes/Question.html":{},"coverage.html":{}}}],["src/src/app/model/question.model.ts:12",{"_index":224,"title":{},"body":{"classes/Question.html":{}}}],["src/src/app/model/question.model.ts:20",{"_index":227,"title":{},"body":{"classes/Question.html":{}}}],["src/src/app/model/question.model.ts:21",{"_index":226,"title":{},"body":{"classes/Question.html":{}}}],["src/src/app/model/question.model.ts:22",{"_index":225,"title":{},"body":{"classes/Question.html":{}}}],["src/src/app/service/question.service.t",{"_index":279,"title":{},"body":{"classes/QuestionService.html":{},"coverage.html":{}}}],["src/src/app/service/question.service.ts:12",{"_index":280,"title":{},"body":{"classes/QuestionService.html":{}}}],["src/src/app/service/user.service.t",{"_index":283,"title":{},"body":{"classes/UserService.html":{},"coverage.html":{}}}],["src/src/app/service/user.service.ts:15",{"_index":287,"title":{},"body":{"classes/UserService.html":{}}}],["src/src/app/service/user.service.ts:23",{"_index":289,"title":{},"body":{"classes/UserService.html":{}}}],["src/src/app/service/user.service.ts:30",{"_index":291,"title":{},"body":{"classes/UserService.html":{}}}],["src/src/app/service/user.service.ts:9",{"_index":286,"title":{},"body":{"classes/UserService.html":{}}}],["start",{"_index":332,"title":{"index.html":{}},"body":{}}],["statement",{"_index":296,"title":{},"body":{"coverage.html":{}}}],["store",{"_index":356,"title":{},"body":{"index.html":{}}}],["string",{"_index":14,"title":{},"body":{"classes/Answer.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"classes/UserService.html":{}}}],["styleurl",{"_index":50,"title":{},"body":{"components/AppComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["subscribe((param",{"_index":263,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["support",{"_index":378,"title":{},"body":{"modules.html":{}}}],["sure",{"_index":372,"title":{},"body":{"index.html":{}}}],["svg",{"_index":379,"title":{},"body":{"modules.html":{}}}],["tabl",{"_index":312,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverag",{"_index":311,"title":{},"body":{"coverage.html":{}}}],["templat",{"_index":42,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["templateurl",{"_index":52,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["test",{"_index":363,"title":{},"body":{"index.html":{}}}],["text",{"_index":25,"title":{},"body":{"classes/Answer.html":{}}}],["this.quest",{"_index":178,"title":{},"body":{"components/HomeComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["this.question.answers.push(newansw",{"_index":268,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["this.question.answers[index].iscorrect",{"_index":271,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["this.question.author",{"_index":270,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["this.questionservice.quest",{"_index":179,"title":{},"body":{"components/HomeComponent.html":{}}}],["this.questionservice.questions.push(newquest",{"_index":220,"title":{},"body":{"components/NewQuestionComponent.html":{}}}],["this.questionservice.questions[id",{"_index":265,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["this.route.param",{"_index":262,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["this.router.navig",{"_index":158,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.router.navigate(['/hom",{"_index":201,"title":{},"body":{"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{}}}],["this.usernam",{"_index":292,"title":{},"body":{"classes/UserService.html":{}}}],["this.userservice.isuserloggedin",{"_index":156,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.userservice.login(usernam",{"_index":200,"title":{},"body":{"components/LoginComponent.html":{}}}],["this.userservice.logout",{"_index":157,"title":{},"body":{"components/HeaderComponent.html":{}}}],["this.userservice.usernam",{"_index":219,"title":{},"body":{"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["tree",{"_index":44,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["true",{"_index":31,"title":{},"body":{"classes/Answer.html":{},"components/QuestionDetailsComponent.html":{},"classes/UserService.html":{},"miscellaneous/variables.html":{}}}],["type",{"_index":20,"title":{},"body":{"classes/Answer.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"classes/Question.html":{},"components/QuestionDetailsComponent.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["unit",{"_index":362,"title":{},"body":{"index.html":{}}}],["url",{"_index":248,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["us",{"_index":352,"title":{},"body":{"index.html":{}}}],["user",{"_index":146,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"classes/UserService.html":{}}}],["user'",{"_index":22,"title":{},"body":{"classes/Answer.html":{},"classes/Question.html":{},"classes/UserService.html":{}}}],["usernam",{"_index":199,"title":{},"body":{"components/LoginComponent.html":{},"classes/UserService.html":{}}}],["userservic",{"_index":116,"title":{"classes/UserService.html":{}},"body":{"modules/AppModule.html":{},"components/HeaderComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"classes/UserService.html":{},"coverage.html":{}}}],["userservice'",{"_index":144,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["userservice}'",{"_index":155,"title":{},"body":{"components/HeaderComponent.html":{},"components/LoginComponent.html":{}}}],["valu",{"_index":29,"title":{},"body":{"classes/Answer.html":{},"classes/Question.html":{},"classes/QuestionService.html":{},"classes/UserService.html":{},"miscellaneous/variables.html":{}}}],["var",{"_index":60,"title":{},"body":{"components/AppComponent.html":{},"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{}}}],["variabl",{"_index":298,"title":{"miscellaneous/variables.html":{}},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["version",{"_index":338,"title":{},"body":{"index.html":{}}}],["via",{"_index":365,"title":{},"body":{"index.html":{}}}],["void",{"_index":151,"title":{},"body":{"components/HeaderComponent.html":{},"components/HomeComponent.html":{},"components/LoginComponent.html":{},"components/NewQuestionComponent.html":{},"components/QuestionDetailsComponent.html":{},"classes/UserService.html":{}}}],["válasz",{"_index":278,"title":{},"body":{"components/QuestionDetailsComponent.html":{}}}],["zone.j",{"_index":327,"title":{},"body":{"dependencies.html":{}}}],["zoom",{"_index":85,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"classes/Answer.html":{"url":"classes/Answer.html","title":"class - Answer","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Answer\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/src/app/model/answer.model.ts\n        \n\n            \n                Description\n            \n            \n                The answer class.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                answer\n                            \n                            \n                                    Public\n                                author\n                            \n                            \n                                isCorrect\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(author: string, answer: string)\n                    \n                \n                        \n                            \n                                Defined in src/src/app/model/answer.model.ts:10\n                            \n                        \n\n                \n                    \n                            The constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        author\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The user's name that made this answer.\n\n                                                        \n                                                \n                                                \n                                                        answer\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The answer's text.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            answer\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        answer:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/src/app/model/answer.model.ts:18\n                            \n                        \n\n                \n                    \n                        The answer's text.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            author\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        author:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/src/app/model/answer.model.ts:17\n                            \n                        \n\n                \n                    \n                        The user's name that made this answer.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isCorrect\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        isCorrect:     \n\n                    \n                \n                    \n                        \n                            Default value : false\n                        \n                    \n                        \n                            \n                                    Defined in src/src/app/model/answer.model.ts:10\n                            \n                        \n\n                \n                    \n                        True, if the Question's author accepted this answer.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Answer {\n\n  /**\n   * True, if the Question's author accepted this answer.\n   * @type {boolean}\n   */\n  isCorrect = false;\n\n  /**\n   * The constructor.\n   * @param {string} author The user's name that made this answer.\n   * @param {string} answer The answer's text.\n   */\n  constructor(public author: string,\n              public answer: string) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/AppComponent.html":{"url":"components/AppComponent.html","title":"component - AppComponent","body":"\n                   \n\n\n\n\n\n  Components\n  AppComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/src/app/app.component.ts\n\n\n    \n        Description\n    \n    \n        The main component.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                my-app\n            \n\n            \n                styleUrls\n                app.component.css\n            \n\n\n\n            \n                templateUrl\n                ./app.component.html\n            \n\n\n        \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\n\n/**\n * The main component.\n */\n@Component({\n  selector: 'my-app',\n  templateUrl: './app.component.html',\n  styleUrls: [ './app.component.css' ]\n})\nexport class AppComponent  {\n}\n\n    \n\n    \n        \n\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewQuestionComponent', 'selector': 'app-new-question'},{'name': 'QuestionDetailsComponent', 'selector': 'app-question-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'AppComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n  Modules\n  AppModule\n\n\n      \n          \n              \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNewQuestionComponent\n\nNewQuestionComponent\n\nAppModule -->\n\nNewQuestionComponent->AppModule\n\n\n\n\n\nQuestionDetailsComponent\n\nQuestionDetailsComponent\n\nAppModule -->\n\nQuestionDetailsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n          \n          \n          \n              Zoom in\n              Reset\n              Zoom out\n          \n      \n      \n      \n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n\n        \n            File\n        \n        \n            src/src/app/app.module.ts\n        \n\n\n        \n\n        \n            \n                \n                    Declarations\n                    \n                            \n                                AppComponent\n                            \n                            \n                                HeaderComponent\n                            \n                            \n                                HomeComponent\n                            \n                            \n                                LoginComponent\n                            \n                            \n                                NewQuestionComponent\n                            \n                            \n                                QuestionDetailsComponent\n                            \n                    \n                \n                \n                    Bootstrap\n                    \n                            \n                                AppComponent\n                            \n                    \n                \n            \n        \n    \n\n\n    \n        import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { FormsModule } from '@angular/forms';\nimport {RouterModule, Routes} from '@angular/router';\nimport { MatToolbarModule, MatMenuModule, MatButtonModule, MatInputModule, MatCardModule } from '@angular/material';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './component/header/header.component';\nimport { HomeComponent } from './component/home/home.component';\nimport { LoginComponent } from './component/login/login.component';\nimport { NewQuestionComponent } from './component/new-question/new-question.component';\nimport { QuestionDetailsComponent } from './component/question-details/question-details.component';\n\nimport { QuestionService } from './service/question.service';\nimport {UserService} from './service/user.service';\n\n/**\n * Routing configuration.\n */\nexport const appRoutes: Routes = [\n  {path: '', component: LoginComponent, },\n  {path: 'home', component: HomeComponent, },\n  {path: 'new-question', component: NewQuestionComponent, },\n  {path: 'question-details/:id', component: QuestionDetailsComponent, },\n  ];\n\n/**\n * The bootstrapper module.\n */\n@NgModule({\n  imports:      [ BrowserModule,\n                  FormsModule,\n                  RouterModule.forRoot(appRoutes),\n                  MatToolbarModule,\n                  MatMenuModule,\n                  MatButtonModule,\n                  MatInputModule,\n                  MatCardModule ],\n  declarations: [ AppComponent,\n                  HeaderComponent,\n                  HomeComponent,\n                  LoginComponent,\n                  NewQuestionComponent ,\n                  QuestionDetailsComponent\n                ],\n  providers:    [ QuestionService, UserService ],\n  bootstrap:    [ AppComponent ]\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HeaderComponent.html":{"url":"components/HeaderComponent.html","title":"component - HeaderComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HeaderComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/src/app/component/header/header.component.ts\n\n\n    \n        Description\n    \n    \n        The header component. Contains the navigation bar, the app brand and the logout button.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-header\n            \n\n\n\n\n            \n                templateUrl\n                ./header.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isUserLoggedIn\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/src/app/component/header/header.component.ts:13\n                            \n                        \n\n                \n                    \n                            The constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Injected router serivce.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Injected {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isUserLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisUserLoggedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/src/app/component/header/header.component.ts:26\n                            \n                        \n\n\n                \n                    \n                            Calls the UserService's isUserLoggedIn() method\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Is User Logged In?\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/src/app/component/header/header.component.ts:33\n                            \n                        \n\n\n                \n                    \n                            Calls UserService's logout() method to log the user out and navigates to the root page.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import {Component} from '@angular/core';\nimport {Router} from '@angular/router';\n\nimport { UserService } from '../../service/user.service';\n\n/**\n *  The header component. Contains the navigation bar, the app brand and the logout button.\n */\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html'\n})\nexport class HeaderComponent {\n\n  /**\n   * The constructor.\n   * @param {Router} router Injected router serivce.\n   * @param {UserService} userService Injected {@link UserService}.\n   */\n  constructor(private router: Router, private userService: UserService) {}\n\n  /**\n   * Calls the {@link UserService}'s isUserLoggedIn() method\n   * @returns {boolean} Is User Logged In?\n   */\n  isUserLoggedIn(): boolean {\n    return this.userService.isUserLoggedIn();\n  }\n\n  /**\n   * Calls {@link UserService}'s logout() method to log the user out and navigates to the root page.\n   */\n  logout() {\n    this.userService.logout();\n    this.router.navigate(['/']);\n  }\n}\n\n    \n\n    \n        \n  QA Engine\n  Kezdőoldal\n  Új kérdés\n  Kilépés\n\n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '  QA Engine  Kezdőoldal  Új kérdés  Kilépés'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewQuestionComponent', 'selector': 'app-new-question'},{'name': 'QuestionDetailsComponent', 'selector': 'app-question-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HeaderComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/HomeComponent.html":{"url":"components/HomeComponent.html","title":"component - HomeComponent","body":"\n                   \n\n\n\n\n\n  Components\n  HomeComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/src/app/component/home/home.component.ts\n\n\n    \n        Description\n    \n    \n        The home component. Contains the questions that have been asked, if there any.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-home\n            \n\n\n\n\n            \n                templateUrl\n                ./home.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                questions\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(questionService: QuestionService)\n                    \n                \n                        \n                            \n                                Defined in src/src/app/component/home/home.component.ts:19\n                            \n                        \n\n                \n                    \n                            The constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                    QuestionService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Injected {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/src/app/component/home/home.component.ts:30\n                            \n                        \n\n\n                \n                    \n                            Initializes the local question reference.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questions:     Question[]\n\n                    \n                \n                    \n                        \n                            Type :     Question[]\n\n                        \n                    \n                        \n                            \n                                    Defined in src/src/app/component/home/home.component.ts:19\n                            \n                        \n\n                \n                    \n                        Local reference to the asked questions.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import {Component, OnInit} from '@angular/core';\n\nimport { Question } from '../../model/question.model';\n\nimport { QuestionService } from '../../service/question.service';\n\n/**\n * The home component. Contains the questions that have been asked, if there any.\n */\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html'\n})\nexport class HomeComponent implements OnInit {\n\n  /**\n   * Local reference to the asked questions.\n   */\n  questions: Question[];\n\n  /**\n   * The constructor.\n   * @param {QuestionService} questionService Injected {@link QuestionService}.\n   */\n  constructor(private questionService: QuestionService) {}\n\n  /**\n   * Initializes the local question reference.\n   */\n  ngOnInit() {\n    this.questions = this.questionService.questions;\n  }\n}\n\n    \n\n    \n        Kérdések\n\n\n  Senki sem kérdezett még!\n\n\n\n  \n    Kérdés: {{question.name}}\n  \n  \n    Leírás:\n    {{question.description}}\n  \n  \n    Részletek\n  \n\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Kérdések  Senki sem kérdezett még!      Kérdés: {{question.name}}        Leírás:    {{question.description}}        Részletek  '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewQuestionComponent', 'selector': 'app-new-question'},{'name': 'QuestionDetailsComponent', 'selector': 'app-question-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'HomeComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/LoginComponent.html":{"url":"components/LoginComponent.html","title":"component - LoginComponent","body":"\n                   \n\n\n\n\n\n  Components\n  LoginComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/src/app/component/login/login.component.ts\n\n\n    \n        Description\n    \n    \n        The login component. That component is displayed if the user not logged in yet.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-login\n            \n\n            \n                styleUrls\n                login.component.css\n            \n\n\n\n            \n                templateUrl\n                ./login.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(router: Router, userService: UserService)\n                    \n                \n                        \n                            \n                                Defined in src/src/app/component/login/login.component.ts:14\n                            \n                        \n\n                \n                    \n                            The constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Injected router service.\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Injected {\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(userName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/src/app/component/login/login.component.ts:27\n                            \n                        \n\n\n                \n                    \n                            Calls the UserService's login method with the given username to log the user in, then navigates to the home page.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The provided username.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { UserService } from '../../service/user.service';\n\n/**\n * The login component. That component is displayed if the user not logged in yet.\n */\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent {\n\n  /**\n   * The constructor.\n   * @param {Router} router Injected router service.\n   * @param {UserService} userService Injected {@link UserService}.\n   */\n  constructor(private router: Router, private userService: UserService) {}\n\n  /**\n   * Calls the {@link UserService}'s login method with the given username to log the user in, then navigates to the home page.\n   * @param {string} userName The provided username.\n   */\n  login(userName: string) {\n      this.userService.login(userName);\n      this.router.navigate(['/home']);\n  }\n}\n\n    \n\n    \n        Bejelentkezés\n\n\n\n      \n        \n      \n\n        \n          Login\n        \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = 'Bejelentkezés                                      Login          '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewQuestionComponent', 'selector': 'app-new-question'},{'name': 'QuestionDetailsComponent', 'selector': 'app-question-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'LoginComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/NewQuestionComponent.html":{"url":"components/NewQuestionComponent.html","title":"component - NewQuestionComponent","body":"\n                   \n\n\n\n\n\n  Components\n  NewQuestionComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/src/app/component/new-question/new-question.component.ts\n\n\n    \n        Description\n    \n    \n        The new question component. Here users can create new questions.\n\n    \n\n\n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-new-question\n            \n\n            \n                styleUrls\n                new-question.component.css\n            \n\n\n\n            \n                templateUrl\n                ./new-question.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addQuestion\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(questionService: QuestionService, userService: UserService, router: Router)\n                    \n                \n                        \n                            \n                                Defined in src/src/app/component/new-question/new-question.component.ts:17\n                            \n                        \n\n                \n                    \n                            The constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                    QuestionService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Injected {\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Injected {\n\n                                                        \n                                                \n                                                \n                                                        router\n                                                  \n                                                        \n                                                                    Router\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Injected router service.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \naddQuestion(name: string, details: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/src/app/component/new-question/new-question.component.ts:35\n                            \n                        \n\n\n                \n                    \n                            Creates a new Question object, then adds it to the {@link questionService}'s question list.\nAfter that it navigates to the home page.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The new question's name.\n\n                                                        \n                                                \n                                                \n                                                        details\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The new question's details.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n        import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { Question } from '../../model/question.model';\n\nimport { UserService } from '../../service/user.service';\nimport { QuestionService } from '../../service/question.service';\n\n/**\n * The new question component. Here users can create new questions.\n */\n@Component({\n  selector: 'app-new-question',\n  templateUrl: './new-question.component.html',\n  styleUrls: ['./new-question.component.css']\n})\nexport class NewQuestionComponent {\n\n  /**\n   * The constructor.\n   * @param {QuestionService} questionService Injected {@link QuestionService}.\n   * @param {UserService} userService Injected {@link UserService}.\n   * @param {Router} router Injected router service.\n   */\n  constructor(private questionService: QuestionService,\n              private userService: UserService,\n              private router: Router) {}\n\n  /**\n   * Creates a new {@link Question} object, then adds it to the {@link questionService}'s question list.\n   * After that it navigates to the home page.\n   * @param {string} name The new question's name.\n   * @param {string} details The new question's details.\n   */\n  addQuestion(name: string, details: string) {\n    const newQuestion = new Question(name, details,\n                                     this.userService.userName);\n    this.questionService.questions.push(newQuestion);\n    this.router.navigate(['/home']);\n  }\n}\n\n    \n\n    \n        \n\n      \n      \n      \n\n      \n      \n      \n\n    \n      \n        \n          Hozzáad\n        \n      \n    \n  \n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '                                                                Hozzáad                    '\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewQuestionComponent', 'selector': 'app-new-question'},{'name': 'QuestionDetailsComponent', 'selector': 'app-question-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'NewQuestionComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Question.html":{"url":"classes/Question.html","title":"class - Question","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  Question\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/src/app/model/question.model.ts\n        \n\n            \n                Description\n            \n            \n                The Question class. It contains the provided Answer's too.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                answers\n                            \n                            \n                                    Public\n                                author\n                            \n                            \n                                    Public\n                                description\n                            \n                            \n                                    Public\n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(name: string, description: string, author: string)\n                    \n                \n                        \n                            \n                                Defined in src/src/app/model/question.model.ts:12\n                            \n                        \n\n                \n                    \n                            The constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        name\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The question.\n\n                                                        \n                                                \n                                                \n                                                        description\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The question's description.\n\n                                                        \n                                                \n                                                \n                                                        author\n                                                  \n                                                        \n                                                                    string\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                The user's name that asked that question.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            answers\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        answers:     Answer[]\n\n                    \n                \n                    \n                        \n                            Type :     Answer[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/src/app/model/question.model.ts:12\n                            \n                        \n\n                \n                    \n                        The Answers objects that have been provided for this question.\n\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            author\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        author:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/src/app/model/question.model.ts:22\n                            \n                        \n\n                \n                    \n                        The user's name that asked that question.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            description\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        description:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/src/app/model/question.model.ts:21\n                            \n                        \n\n                \n                    \n                        The question's description.\n                    \n                \n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Public\n                            name\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        name:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/src/app/model/question.model.ts:20\n                            \n                        \n\n                \n                    \n                        The question.\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Answer } from './answer.model';\n\n/**\n * The Question class. It contains the provided {@link Answer}'s too.\n */\nexport class Question {\n\n  /**\n   * The {@link Answer}s objects that have been provided for this question.\n   * @type {any[]}\n   */\n  answers: Answer[] = [];\n\n  /**\n   * The constructor.\n   * @param {string} name The question.\n   * @param {string} description The question's description.\n   * @param {string} author The user's name that asked that question.\n   */\n  constructor(public name: string,\n              public description: string,\n              public author: string) {}\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"components/QuestionDetailsComponent.html":{"url":"components/QuestionDetailsComponent.html","title":"component - QuestionDetailsComponent","body":"\n                   \n\n\n\n\n\n  Components\n  QuestionDetailsComponent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n        \n            Template\n        \n        \n            DOM Tree\n        \n\n\n\n    \n    File\n\n\n    src/src/app/component/question-details/question-details.component.ts\n\n\n    \n        Description\n    \n    \n        The question details component.\nIt displays the answers that have been given to the question and marks with green background the correct ones.\nThe questions owner can mark answers as correct.\n\n    \n\n\n    \n        Implements\n    \n    \n                OnInit\n    \n\n\n\n    Metadata\n    \n        \n\n\n\n\n\n\n\n\n\n\n\n            \n                selector\n                app-question-details\n            \n\n            \n                styleUrls\n                question-details.component.css\n            \n\n\n\n            \n                templateUrl\n                ./question-details.component.html\n            \n\n\n        \n    \n\n\n    \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                question\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                acceptAnswer\n                            \n                            \n                                addAnswer\n                            \n                            \n                                isUserOwnsThisQuestion\n                            \n                            \n                                ngOnInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n    \n    Constructor\n        \n            \n                \n                    \nconstructor(questionService: QuestionService, userService: UserService, route: ActivatedRoute)\n                    \n                \n                        \n                            \n                                Defined in src/src/app/component/question-details/question-details.component.ts:26\n                            \n                        \n\n                \n                    \n                            The constructor.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        questionService\n                                                  \n                                                        \n                                                                    QuestionService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Injected {\n\n                                                        \n                                                \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                    UserService\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Injected {\n\n                                                        \n                                                \n                                                \n                                                        route\n                                                  \n                                                        \n                                                                    ActivatedRoute\n                                                        \n                                                  \n                                                    \n                                                            no\n                                                    \n                                                    \n                                                        \n                                                                Injected route to gain the id url param.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n    \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            acceptAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \nacceptAnswer(index: number)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/src/app/component/question-details/question-details.component.ts:74\n                            \n                        \n\n\n                \n                    \n                            Marks the answer with the given index correct.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        index\n                                                        \n                                                                    number\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The answers index.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            addAnswer\n                            \n                            \n                        \n                    \n                \n                \n                    \naddAnswer(answerForm: NgForm)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/src/app/component/question-details/question-details.component.ts:53\n                            \n                        \n\n\n                \n                    \n                            Adds the provided answer to the question.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        answerForm\n                                                        \n                                                                    NgForm\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The form that contains the new answer's data.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isUserOwnsThisQuestion\n                            \n                            \n                        \n                    \n                \n                \n                    \nisUserOwnsThisQuestion()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/src/app/component/question-details/question-details.component.ts:66\n                            \n                        \n\n\n                \n                    \n                            Checks if the logged in user asked that question.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Is the user asked the question?\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            ngOnInit\n                            \n                            \n                        \n                    \n                \n                \n                    \nngOnInit()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/src/app/component/question-details/question-details.component.ts:41\n                            \n                        \n\n\n                \n                    \n                            Initializes the local question reference by the id given in the url.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n    \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            question\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        question:     Question\n\n                    \n                \n                    \n                        \n                            Type :     Question\n\n                        \n                    \n                        \n                            \n                                    Defined in src/src/app/component/question-details/question-details.component.ts:26\n                            \n                        \n\n                \n                    \n                        Local reference to the question, that\n\n                    \n                \n\n            \n        \n\n\n\n\n\n    \n        import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params } from '@angular/router';\nimport {NgForm} from '@angular/forms';\n\nimport { Question } from '../../model/question.model';\nimport { Answer } from '../../model/answer.model';\n\nimport { UserService } from '../../service/user.service';\nimport { QuestionService } from '../../service/question.service';\n\n/**\n * The question details component.\n * It displays the answers that have been given to the question and marks with green background the correct ones.\n * The questions owner can mark answers as correct.\n */\n@Component({\n  selector: 'app-question-details',\n  templateUrl: './question-details.component.html',\n  styleUrls: ['question-details.component.css']\n})\nexport class QuestionDetailsComponent implements OnInit {\n\n  /**\n   * Local reference to the question, that\n   */\n  question: Question;\n\n  /**\n   * The constructor.\n   * @param {QuestionService} questionService Injected {@link QuestionService}.\n   * @param {UserService} userService Injected {@link UserService}.\n   * @param {ActivatedRoute} route Injected route to gain the id url param.\n   */\n  constructor(private questionService: QuestionService,\n              private userService: UserService,\n              private route: ActivatedRoute) {}\n\n  /**\n   * Initializes the local question reference by the id given in the url.\n   */\n  ngOnInit() {\n    this.route.params\n      .subscribe((params: Params) => {\n        const id = +params['id'];\n        this.question = this.questionService.questions[id];\n      });\n  }\n\n  /**\n   * Adds the provided answer to the question.\n   * @param {NgForm} answerForm The form that contains the new answer's data.\n   */\n  addAnswer(answerForm: NgForm) {\n    const newAnswer = new Answer(\n      this.userService.userName,\n      answerForm.controls['answer'].value\n    );\n    this.question.answers.push(newAnswer);\n    answerForm.reset();\n  }\n\n  /**\n   * Checks if the logged in user asked that question.\n   * @returns {boolean} Is the user asked the question?\n   */\n  isUserOwnsThisQuestion(): boolean {\n    return this.question.author === this.userService.userName;\n  }\n\n  /**\n   * Marks the answer with the given index correct.\n   * @param {number} index The answers index.\n   */\n  acceptAnswer(index: number) {\n    this.question.answers[index].isCorrect = true;\n  }\n}\n\n    \n\n    \n        \n  \n    {{question.author}} kérdezte: {{question.name}}\n  \n  \n    Leírás:\n    {{question.description}}\n  \n\n\n\n  \n    {{answer.author}} írta\n  \n  \n    {{answer.answer}}\n  \n  \n    Elfogad\n  \n\n\n\n  \n    Új válasz\n  \n  \n    \n\n          \n      \n      \n        \n          \n            Hozzáad\n          \n        \n    \n  \n\n\n\n  \n    Új válasz\n  \n  \n    \n\n      \n        Válasz\n        \n      \n\n      \n        \n          \n            Hozzáad\n          \n        \n      \n    \n  \n-->\n    \n\n    \n        \n        \n            \n                Legend\n            \n            \n                Html element\n            \n            \n                Component\n            \n            \n                Html element with directive\n            \n        \n    \n\n    \n\n\n\n\n\n\n        var COMPONENT_TEMPLATE = '      {{question.author}} kérdezte: {{question.name}}        Leírás:    {{question.description}}        {{answer.author}} írta        {{answer.answer}}        Elfogad        Új válasz                                                            Hozzáad                              Új válasz                      Válasz                                                  Hozzáad                              -->'\n    var COMPONENTS = [{'name': 'AppComponent', 'selector': 'my-app'},{'name': 'HeaderComponent', 'selector': 'app-header'},{'name': 'HomeComponent', 'selector': 'app-home'},{'name': 'LoginComponent', 'selector': 'app-login'},{'name': 'NewQuestionComponent', 'selector': 'app-new-question'},{'name': 'QuestionDetailsComponent', 'selector': 'app-question-details'}];\n    var DIRECTIVES = [];\n    var ACTUAL_COMPONENT = {'name': 'QuestionDetailsComponent'};\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/QuestionService.html":{"url":"classes/QuestionService.html","title":"class - QuestionService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  QuestionService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/src/app/service/question.service.ts\n        \n\n            \n                Description\n            \n            \n                The Question service. It contains the asked Question's.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                questions\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            questions\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        questions:     Question[]\n\n                    \n                \n                    \n                        \n                            Type :     Question[]\n\n                        \n                    \n                    \n                        \n                            Default value : []\n                        \n                    \n                        \n                            \n                                    Defined in src/src/app/service/question.service.ts:12\n                            \n                        \n\n                \n                    \n                        The asked Question array.\n\n                    \n                \n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Question } from '../model/question.model';\n\n/**\n * The Question service. It contains the asked {@link Question}'s.\n */\nexport class QuestionService {\n\n  /**\n   * The asked {@link Question} array.\n   * @type {Question[]}\n   */\n  questions: Question[] = [];\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UserService.html":{"url":"classes/UserService.html","title":"class - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n  Classes\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/src/app/service/user.service.ts\n        \n\n            \n                Description\n            \n            \n                The User service. It contains the logged in user's name and provides the user handling functionality.\n\n            \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                userName\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                isUserLoggedIn\n                            \n                            \n                                login\n                            \n                            \n                                logout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userName\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        userName:     string\n\n                    \n                \n                    \n                        \n                            Type :     string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/src/app/service/user.service.ts:9\n                            \n                        \n\n                \n                    \n                        The logged in user's name.\n\n                    \n                \n\n            \n        \n\n\n            \n    \n        \n            Methods\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            isUserLoggedIn\n                            \n                            \n                        \n                    \n                \n                \n                    \nisUserLoggedIn()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/src/app/service/user.service.ts:15\n                            \n                        \n\n\n                \n                    \n                            Checks if the user logged in. Returns true if the {@link userName} not null.\n\n\n                            \n                            \n                            \n                                Returns :     boolean\n\n                            \n                                \n                                    Is user logged in?\n\n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            login\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogin(userName: string)\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/src/app/service/user.service.ts:23\n                            \n                        \n\n\n                \n                    \n                            Sets the {@link userName} to the provided value.\n\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        userName\n                                                        \n                                                                    string\n                                                        \n                                                    \n                                                    \n                                                            no\n                                                    \n                                                    \n\n                                                        \n                                                                The logged in user's name.\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                            \n                            \n                            \n                                Returns :     void\n\n                            \n                                \n                                    \n                                \n                    \n                \n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            logout\n                            \n                            \n                        \n                    \n                \n                \n                    \nlogout()\n                    \n                \n\n\n                        \n                            \n                                    Defined in src/src/app/service/user.service.ts:30\n                            \n                        \n\n\n                \n                    \n                            Logs out the user. Sets the {@link userName} to null.\n\n\n                            \n                                Returns :     void\n\n                            \n                    \n                \n            \n        \n\n\n\n\n\n\n\n    \n\n\n    \n        export class UserService {\n\n  /**\n   * The logged in user's name.\n   */\n  userName: string;\n\n  /**\n   * Checks if the user logged in. Returns true if the {@link userName} not null.\n   * @returns {boolean} Is user logged in?\n   */\n  isUserLoggedIn(): boolean {\n    return this.userName != null;\n  }\n\n  /**\n   * Sets the {@link userName} to the provided value.\n   * @param {string} userName The logged in user's name.\n   */\n  login(userName: string) {\n    this.userName = userName;\n  }\n\n  /**\n   * Logs out the user. Sets the {@link userName} to null.\n   */\n  logout() {\n    this.userName = null;\n  }\n}\n\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                    src/environments/environment.prod.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/environments/environment.ts\n            \n            \n                variable\n            \n            \n                environment\n            \n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                    src/src/app/app.component.ts\n            \n            \n                component\n            \n            \n                AppComponent\n            \n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                    src/src/app/component/header/header.component.ts\n            \n            \n                component\n            \n            \n                HeaderComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/src/app/component/home/home.component.ts\n            \n            \n                component\n            \n            \n                HomeComponent\n            \n            \n                100 %\n                (4/4)\n            \n        \n        \n            \n                \n                    src/src/app/component/login/login.component.ts\n            \n            \n                component\n            \n            \n                LoginComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/src/app/component/new-question/new-question.component.ts\n            \n            \n                component\n            \n            \n                NewQuestionComponent\n            \n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                    src/src/app/component/question-details/question-details.component.ts\n            \n            \n                component\n            \n            \n                QuestionDetailsComponent\n            \n            \n                100 %\n                (7/7)\n            \n        \n        \n            \n                \n                    src/src/app/model/answer.model.ts\n            \n            \n                class\n            \n            \n                Answer\n            \n            \n                100 %\n                (5/5)\n            \n        \n        \n            \n                \n                    src/src/app/model/question.model.ts\n            \n            \n                class\n            \n            \n                Question\n            \n            \n                100 %\n                (6/6)\n            \n        \n        \n            \n                \n                    src/src/app/service/question.service.ts\n            \n            \n                class\n            \n            \n                QuestionService\n            \n            \n                100 %\n                (2/2)\n            \n        \n        \n            \n                \n                    src/src/app/service/user.service.ts\n            \n            \n                class\n            \n            \n                UserService\n            \n            \n                100 %\n                (5/5)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @angular/animations : 6.0.9\n        \n            @angular/common : 6.0.0\n        \n            @angular/compiler : 6.0.0\n        \n            @angular/core : 6.0.0\n        \n            @angular/forms : 6.0.0\n        \n            @angular/http : ^5.0.0\n        \n            @angular/platform-browser : 6.0.0\n        \n            @angular/platform-browser-dynamic : 6.0.0\n        \n            @angular/router : 6.0.0\n        \n            core-js : 2.5.5\n        \n            rxjs : 6.1.0\n        \n            zone.js : 0.8.26\n        \n            @angular/cdk : 6.4.0\n        \n            @angular/material : 6.4.0\n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nangular-nrkhax\nThis project was generated with Angular CLI version 1.2.1.\nDevelopment server\nRun ng serve for a dev server. Navigate to http://localhost:4200/. The app will automatically reload if you change any of the source files.\nCode scaffolding\nRun ng generate component component-name to generate a new component. You can also use ng generate directive|pipe|service|class|module.\nBuild\nRun ng build to build the project. The build artifacts will be stored in the dist/ directory. Use the -prod flag for a production build.\nRunning unit tests\nRun ng test to execute the unit tests via Karma.\nRunning end-to-end tests\nRun ng e2e to execute the end-to-end tests via Protractor.\nBefore running the tests make sure you are serving the app via ng serve.\nFurther help\nTo get more help on the Angular CLI use ng help or go check out the Angular CLI README.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                            Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n            \n                \n                    \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_declarations\n\n\n\ncluster_AppModule_bootstrap\n\n\n\n\nAppComponent\n\nAppComponent\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAppComponent->AppModule\n\n\n\n\n\nHeaderComponent\n\nHeaderComponent\n\nAppModule -->\n\nHeaderComponent->AppModule\n\n\n\n\n\nHomeComponent\n\nHomeComponent\n\nAppModule -->\n\nHomeComponent->AppModule\n\n\n\n\n\nLoginComponent\n\nLoginComponent\n\nAppModule -->\n\nLoginComponent->AppModule\n\n\n\n\n\nNewQuestionComponent\n\nNewQuestionComponent\n\nAppModule -->\n\nNewQuestionComponent->AppModule\n\n\n\n\n\nQuestionDetailsComponent\n\nQuestionDetailsComponent\n\nAppModule -->\n\nQuestionDetailsComponent->AppModule\n\n\n\n\n\nAppComponent \n\nAppComponent \n\nAppComponent  -->\n\nAppModule->AppComponent \n\n\n\n\n\n\n                \n                \n                \n                    Zoom in\n                    Reset\n                    Zoom out\n                \n            \n\n    \n            \n                \n                    \n                        \n                        \n                            1 module\n                        \n                    \n                \n            \n            \n                \n                    \n                        \n                        6 components\n                    \n                \n            \n            \n                \n                    \n                        \n                        4 classes\n                    \n                \n            \n            \n                \n                    \n                        \n                        \n                            0 routes\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"routes.html":{"url":"routes.html","title":"routes - routes","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n    Routes\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            environment   (src/.../environment.prod.ts)\n                        \n                        \n                            environment   (src/.../environment.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/environments/environment.prod.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: true\n}\n                        \n                    \n\n\n            \n        \n\n    src/environments/environment.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            environment\n                            \n                            \n                        \n                    \n                \n                \n                    \n                        environment:     object\n\n                    \n                \n                    \n                        \n                            Type :     object\n\n                        \n                    \n                    \n                        \n                            Default value : {\n  production: false\n}\n                        \n                    \n\n\n            \n        \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
